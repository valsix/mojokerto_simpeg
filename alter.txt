create schema opt authorization postgres;

--alter table pangkat_riwayat alter column pangkat_riwayat_id type numeric using cast(pangkat_riwayat_id as numeric);

alter table pegawai add column pangkat_riwayat_id numeric, add column pangkat_awal_riwayat_id numeric, add column gaji_riwayat_id numeric, add column jabatan_riwayat_id numeric, add column jabatan_tambahan_id numeric, add column pendidikan_riwayat_id numeric, add column hukuman_id numeric, add column diklat_struktural_id numeric;

alter table pegawai add column format_nip_baru character varying;
alter table pegawai add column vnama_lengkap character varying;

create or replace view opt.pangkat_terakhir_riwayat as 
select
a.pangkat_riwayat_id, a.pegawai_id
from
(
	select a.pangkat_riwayat_id, a.pegawai_id
	, row_number () over ( partition by a.pegawai_id order by a.tmt_pangkat desc, a.tanggal_sk desc ) urut
	from pangkat_riwayat a
) a
where urut = 1
order by a.pegawai_id
;

update pegawai as u
set
pangkat_riwayat_id= aggr.pangkat_riwayat_id
from
(
	select a.pegawai_id, a.pangkat_riwayat_id
	from opt.pangkat_terakhir_riwayat a
	where 1=1
) as aggr
where u.pegawai_id = aggr.pegawai_id;

create or replace view opt.pangkat_awal_riwayat as 
select
a.pangkat_riwayat_id, a.pegawai_id
from
(
	select a.pangkat_riwayat_id, a.pegawai_id
	, row_number () over ( partition by a.pegawai_id order by a.tmt_pangkat, a.tanggal_sk) urut
	from pangkat_riwayat a
) a
where urut = 1
order by a.pegawai_id
;

update pegawai as u
set
pangkat_awal_riwayat_id= aggr.pangkat_riwayat_id
from
(
	select a.pegawai_id, a.pangkat_riwayat_id
	from opt.pangkat_awal_riwayat a
	where 1=1
) as aggr
where u.pegawai_id = aggr.pegawai_id;

create or replace view opt.jabatan_terakhir_riwayat as 
select
a.jabatan_riwayat_id, a.pegawai_id
from
(
	select a.jabatan_riwayat_id, a.pegawai_id
	, row_number () over ( partition by a.pegawai_id order by a.tmt_jabatan desc ) urut
	from jabatan_riwayat a
) a
where urut = 1
order by a.pegawai_id
;

update pegawai as u
set
jabatan_riwayat_id= aggr.jabatan_riwayat_id
from
(
	select a.pegawai_id, a.jabatan_riwayat_id
	from opt.jabatan_terakhir_riwayat a
	where 1=1
) as aggr
where u.pegawai_id = aggr.pegawai_id;

create or replace view opt.jabatan_tambahan_terakhir_riwayat as 
select
a.jabatan_tambahan_id, a.pegawai_id
from
(
	select a.jabatan_tambahan_id, a.pegawai_id
	, row_number () over ( partition by a.pegawai_id order by a.tmt_jabatan desc ) urut
	from jabatan_tambahan a
) a
where urut = 1
order by a.pegawai_id
;

update pegawai as u
set
jabatan_tambahan_id= aggr.jabatan_tambahan_id
from
(
	select a.pegawai_id, a.jabatan_tambahan_id
	from opt.jabatan_tambahan_terakhir_riwayat a
	where 1=1
) as aggr
where u.pegawai_id = aggr.pegawai_id;

create or replace view opt.pendidikan_terakhir_riwayat as 
select
a.pendidikan_riwayat_id, a.pegawai_id
from
(
	select a.pendidikan_riwayat_id, a.pegawai_id
	, row_number () over ( partition by a.pegawai_id order by b.urutan desc ) urut
	from pendidikan_riwayat a
	join pendidikan b on a.pendidikan_id = b.pendidikan_id
) a
where urut = 1
order by a.pegawai_id
;

update pegawai as u
set
pendidikan_riwayat_id= aggr.pendidikan_riwayat_id
from
(
	select a.pegawai_id, a.pendidikan_riwayat_id
	from opt.pendidikan_terakhir_riwayat a
	where 1=1
) as aggr
where u.pegawai_id = aggr.pegawai_id;

create or replace view opt.gaji_terakhir_riwayat as 
select
a.gaji_riwayat_id, a.pegawai_id
from
(
	select a.gaji_riwayat_id, a.pegawai_id
	, row_number () over ( partition by a.pegawai_id order by a.tmt_sk desc, a.tanggal_sk desc ) urut
	from gaji_riwayat a
) a
where urut = 1
order by a.pegawai_id
;

update pegawai as u
set
gaji_riwayat_id= aggr.gaji_riwayat_id
from
(
	select a.pegawai_id, a.gaji_riwayat_id
	from opt.gaji_terakhir_riwayat a
	where 1=1
) as aggr
where u.pegawai_id = aggr.pegawai_id;

create or replace view opt.hukuman_terakhir_riwayat as 
select
a.hukuman_id, a.pegawai_id
from
(
	select a.hukuman_id, a.pegawai_id
	, row_number () over ( partition by a.pegawai_id order by a.tmt_sk desc ) urut
	from hukuman a
) a
where urut = 1
order by a.pegawai_id
;

update pegawai as u
set
hukuman_id= aggr.hukuman_id
from
(
	select a.pegawai_id, a.hukuman_id
	from opt.hukuman_terakhir_riwayat a
	where 1=1
) as aggr
where u.pegawai_id = aggr.pegawai_id;

create or replace view opt.diklat_struktural_terakhir_riwayat as 
select
a.diklat_struktural_id, a.pegawai_id
from
(
	select a.diklat_struktural_id, a.pegawai_id
	, row_number () over ( partition by a.pegawai_id order by a.tanggal_sttpp desc ) urut
	from diklat_struktural a
) a
where urut = 1
order by a.pegawai_id
;

update pegawai as u
set
diklat_struktural_id= aggr.diklat_struktural_id
from
(
	select a.pegawai_id, a.diklat_struktural_id
	from opt.diklat_struktural_terakhir_riwayat a
	where 1=1
) as aggr
where u.pegawai_id = aggr.pegawai_id;
--====================================================================================================================
create or replace function ambil_umur_duk(tanggal_lahir date, tanggal_sekarang date)
  returns character varying as
$body$
declare 
vreturn character varying;
begin
	select
	case
		when (to_number (to_char (tanggal_sekarang, 'mm'), '9999') - to_number (to_char (tanggal_lahir, 'mm'), '9999')) < 0
	then
		to_number (to_char (tanggal_sekarang, 'yyyy'), '9999') - to_number (to_char (tanggal_lahir, 'yyyy'), '9999') - 1
	else
		to_number (to_char (tanggal_sekarang, 'yyyy'), '9999') - to_number (to_char (tanggal_lahir, 'yyyy'), '9999')
	end
	||
	' - '
	||
	case
	when (to_number (to_char (tanggal_sekarang, 'mm'), '9999') - to_number (to_char (tanggal_lahir, 'mm'), '9999')) < 0
	then
		12 + to_number (to_char (tanggal_sekarang, 'mm'), '9999') - to_number (to_char (tanggal_lahir, 'mm'), '9999')
	else
		to_number (to_char (tanggal_sekarang, 'mm'), '9999') - to_number (to_char (tanggal_lahir, 'mm'), '9999')
	end
	into vreturn;
	return(vreturn);
end;
$body$
language plpgsql volatile cost 100;
alter function ambil_umur_duk(date, date) owner to postgres;

create or replace function ambil_satker_id(satkerid character varying)
returns character varying as
$body$
declare
vreturn character varying;
vparent character varying;
begin
	select satker_id_parent into vparent from satker where satker_id = satkerid;

	if substr(satkerid, 1, 6) = '010101' then
		vreturn:= '010101';
	elsif substr(satkerid, 1, 6) = '010104' then
		vreturn:= '010104'; 
	elsif substr(satkerid, 1, 6) = '010105' then
		vreturn:= '010105';
	elsif substr(satkerid, 1, 6) = '010201' then
		vreturn:= '010201'; 
	elsif substr(satkerid, 1, 6) = '010202' then
		vreturn:= '010202';
	elsif substr(satkerid, 1, 6) = '010205' then
		vreturn:= '010205';
	elsif substr(satkerid, 1, 6) = '010301' then
		vreturn:= '010301';
	elsif substr(satkerid, 1, 6) = '010302' then
		vreturn:= '010302';
	elsif substr(satkerid, 1, 6) = '010303' then
		vreturn:= '010303';
	elsif substr(satkerid, 1, 6) = '010304' then
		vreturn:= '010304';
	--elsif length(satkerid) = 4 and satkerid like '01%' then
		--vreturn:= satkerid;
	--elsif vparent like '01%' = false then
		--vreturn:= satkerid;
	--elsif substring(satkerid, 1,2) = '1' and length(satkerid) = 8 then
		--vreturn:= satkerid;
	else
		vreturn:= substr(satkerid, 1, 2);
	end if;
return vreturn;
end;
$body$
language plpgsql volatile cost 100;
alter function ambil_satker_id(character varying) owner to postgres;

create or replace function ambil_satker_nama(satkerid character varying)
returns character varying as
$body$
declare
vreturn character varying;
vnama character varying;
vid character varying;
vcheckid character varying;
begin

	for i in 0 .. (length(satkerid) / 2) - 1 loop
		--if length(satkerid) = 4 and satkerid like '01%' and i = 0 then
		if (satkerid in ('0101', '0102', '0103', '0104', '0105', '0106') and i = 0) or i = 0 then
			vid:= satkerid;
		else
			vid:= ambil_satker_id(substr(satkerid, 1, length(satkerid) - (i * 2)));
		end if;

		if vcheckid = vid then
			vreturn := vreturn;
		else
			select nama into vnama from satker where satker_id = vid;

			if i = 0 then
			vreturn := vnama;
			else
			vreturn := vnama || ' - ' || vreturn;
			end if;
		end if;

		vcheckid:= vid;

	end loop;
	--raise notice 'sql %', vreturn;

	return vreturn;

end;
$body$
language plpgsql volatile cost 100;
alter function ambil_satker_nama(character varying) owner to postgres;

alter table satker add column vsatker_nama_detil character varying;
create or replace function psatker_detil_info()
  returns trigger as
$body$
declare
	vsatker_nama_detil character varying;
begin
	
	vsatker_nama_detil:= ambil_satker_nama(new.satker_id);
	new.vsatker_nama_detil:= vsatker_nama_detil;

  	return new;
   
end;
$body$
language plpgsql volatile cost 100;
alter function psatker_detil_info() owner to postgres;
  
drop trigger if exists tsatker_detil_info on satker;
create trigger tsatker_detil_info
before insert or update
on satker
for each row
execute procedure psatker_detil_info();

update satker as u
set
satker_id= aggr.satker_id
from
(
	select a.satker_id
	from satker a
	where 1=1
) as aggr
where u.satker_id = aggr.satker_id;

create or replace function getformatnipbaru(vnip character varying)
returns character varying as
$body$
declare
vreturn character varying;
begin
	select
	substr(vnip, 1, 8) || ' ' || substr(vnip, 9, 6) || ' ' || substr(vnip, 15, 1) || ' ' || substr(vnip, 16, 3) vnip
	into vreturn;
	
	return vreturn;
end;
$body$
language plpgsql volatile
cost 100;
alter function getformatnipbaru(character varying)
owner to postgres;

alter table pegawai add column vtmt_pensiun date;
alter table pegawai add column vttl character varying;

create or replace function ppegawai_detil_info()
  returns trigger as
$body$
declare
	var_id integer;
	varcheck integer;
	format_nip_baru character varying;
	gelar_depan character varying;
	gelar_belakang character varying;
	nama character varying;
	vnama_lengkap character varying;
	vtipepegawaiid character varying;
	veselonid character varying;
	vjabatan character varying;
	vtmt_pensiun date;
	vtanggal_lahir date;
	vttl character varying;

	/*
	info_satuan_kerja_nama character varying;
	info_satuan_kerja_induk character varying;
	info_satuan_kerja_detil character varying;
	*/
begin

	/*if new.satuan_kerja_id is not null then
		select ambil_satker_nama_dynamic(new.satuan_kerja_id) into info_satuan_kerja_nama;
		select ambil_satker_induk(new.satuan_kerja_id) into info_satuan_kerja_induk;
		select ambil_satker_nama_detil(new.satuan_kerja_id) into info_satuan_kerja_detil;

		new.info_satuan_kerja_nama:= info_satuan_kerja_nama;
		new.info_satuan_kerja_induk:= info_satuan_kerja_induk;
		new.info_satuan_kerja_detil:= info_satuan_kerja_detil;
	end if;*/

	--untuk membuat format nip baru
	if coalesce(nullif(new.nip_baru, ''), null) is not null then
		select getformatnipbaru(new.nip_baru) into format_nip_baru;
		new.format_nip_baru:= format_nip_baru;
	end if;

	--untuk membuat nama lengkap
	gelar_depan:= new.gelar_depan;
	gelar_belakang:= new.gelar_belakang;
	nama:= new.nama;

	if coalesce(nullif(gelar_depan, ''), null) is null then vnama_lengkap:= '';
	else vnama_lengkap:= replace(gelar_depan, '.', '') || '. ';
	end if;

	vnama_lengkap:= vnama_lengkap || nama;

	if coalesce(nullif(gelar_belakang, ''), null) is not null then
		vnama_lengkap:= vnama_lengkap || ', ' || gelar_belakang;
	end if;
	--raise notice 'sql %',vnama_lengkap;

	new.vnama_lengkap:= vnama_lengkap;

	--untuk membuat tmt pensiun
	vtanggal_lahir:= new.tanggal_lahir;
	if vtanggal_lahir is not null then
		vtipepegawaiid:= new.tipe_pegawai_id; veselonid:= ''; vjabatan:= '';
		--update tmt pensiun
		if vtipepegawaiid = '11' or vtipepegawaiid = '21' then
			select
			substring(a.eselon_id::text, 1,1) veselonid, a.nama vjabatan
			into veselonid, vjabatan
			from jabatan_riwayat a
			where a.jabatan_riwayat_id = new.jabatan_riwayat_id;
		end if;
		--raise notice 'sql %',vjabatan;

		if vtipepegawaiid = '11' and (substring(veselonid::text, 1,1) = '1' or substring(veselonid::text, 1,1) = '2') then
			select
			to_date('01-' || to_char(add_months(vtanggal_lahir, (60 * 12) + 1),  'mm-yyyy'), 'dd-mm-yyyy')
			into vtmt_pensiun;
		elsif vtipepegawaiid = '21' or (vtipepegawaiid = '22' and lower(vjabatan) like '%dokter%') then
			select
			to_date('01-' || to_char(add_months(vtanggal_lahir, (60 * 12) + 1),  'mm-yyyy'), 'dd-mm-yyyy')
			into vtmt_pensiun;
		else
			select
			to_date('01-' || to_char(add_months(vtanggal_lahir, (58 * 12) + 1),  'mm-yyyy'), 'dd-mm-yyyy')
			into vtmt_pensiun;
		end if;
		--raise notice 'sql %',vtmt_pensiun;
		new.vtmt_pensiun:= vtmt_pensiun;
	end if;

	--untuk membuat ttl
	vttl:= '';
	if coalesce(nullif(new.tempat_lahir, ''), null) is not null
	then
		vttl:= new.tempat_lahir;
	end if;

	if vtanggal_lahir is not null then
		vttl:= vttl || ', ' || to_char(vtanggal_lahir, 'dd') || ' ' || nama_bulan(to_char(vtanggal_lahir, 'mm')::integer) || ' ' || to_char(vtanggal_lahir, 'yyyy');
	end if;
	--raise notice 'sql %',vttl;
	new.vttl:= vttl;

  return new;
   
end;
$body$
language plpgsql volatile cost 100;
alter function ppegawai_detil_info() owner to postgres;
  
drop trigger if exists tpegawai_detil_info on pegawai;
create trigger tpegawai_detil_info
before insert or update
on pegawai
for each row
execute procedure ppegawai_detil_info();

update pegawai as u
set
pegawai_id= aggr.pegawai_id
from
(
	select a.pegawai_id
	from pegawai a
	where 1=1
	--and coalesce(nullif(format_nip_baru, ''), null) is not null
) as aggr
where u.pegawai_id = aggr.pegawai_id;

--proses data
--====================================================================================================================
drop function if exists pinsertduk(character varying, character varying, integer);
drop function if exists pinsertduk(character varying, character varying, character varying);
create or replace function pinsertduk(pperiode character varying, psatker character varying, ptipepegawai character varying)
  returns void as
$body$
declare
 sqlquery text ;
begin
	--select pinsertduk('032024', '', '')
	
	sqlquery:= '';
	if coalesce(nullif(psatker,'') , null ) is null
	then
		sqlquery := 'delete from duk where 
		periode = ''' || pperiode || '''
		and coalesce(nullif(satker_id_generate,'''') , null ) is null
		';

		/*
		and pegawai_id in (select pegawai_id from pegawai where coalesce(nullif(satker_id_generate,'''') , null ) is null
		if coalesce(nullif(ptipepegawai,'') , null ) is not null
      	then
			sqlquery := sqlquery || ' and (tipe_pegawai_id like ''' || ptipepegawai || '%'') ';
      	end if;

      	sqlquery := sqlquery || ')';
      	*/
   	else
		sqlquery := 'delete from duk where 
		periode = ''' || pperiode || '''
		and satker_id_generate = ''' || psatker || '''
		';

		/*
		and pegawai_id in (select pegawai_id from pegawai where satker_id_generate = ''' || psatker || '''
		if coalesce(nullif(ptipepegawai,'') , null ) is not null
      	then
			sqlquery := sqlquery || ' and (tipe_pegawai_id like ''' || ptipepegawai || '%'') ';
		end if;

      	sqlquery := sqlquery || ')';
      	*/
      
   	end if;

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

	sqlquery := '
	insert into duk 
	(
		pegawai_id, nip_lama, nip_baru, nama, tempat_lahir, tanggal_lahir, jenis_kelamin
		, status_pegawai, pangkat_id, gol_ruang, tmt_pangkat, jabatan, tmt_jabatan, eselon_id, eselon, tmt_eselon
		, masa_kerja_tahun, masa_kerja_bulan, diklat_struktural, tahun_diklat, jumlah_diklat_struktural
		, jumlah_diklat_nonstruktural, pendidikan, nama_sekolah, tahun_lulus, agama, usia, tipe_pegawai_id
		, satker_id, duk, periode, satker_id_generate
	)
	select
		pegawai_id, nip_lama, nip_baru, nama, tempat_lahir, tanggal_lahir, jenis_kelamin
		, status_pegawai, pangkat_id, gol_ruang, tmt_pangkat, jabatan, tmt_jabatan, eselon_id, eselon, tmt_eselon
		, masa_kerja_tahun, masa_kerja_bulan, diklat_struktural, tahun_diklat, jumlah_diklat_struktural
		, jumlah_diklat_nonstruktural, pendidikan, nama_sekolah, tahun_lulus, agama
		, usia, tipe_pegawai_id, satker_id
		,
		row_number () over (
		order by coalesce(d.pangkat_id, 11) desc, d.tmt_pangkat
  		, coalesce(d.eselon_id, 99), d.tmt_eselon, d.masa_kerja_tahun desc, coalesce(d.jumlah_diklat_nonstruktural, 0::numeric) desc
  		) duk
		, ''' || pperiode || ''', ''' || psatker || '''
	from
	(
		select
			d.pegawai_id, d.nip_lama, d.nip_baru, d.nama, d.tempat_lahir, d.tanggal_lahir, d.jenis_kelamin
			, d.status_pegawai, d.pangkat_id, d.gol_ruang, d.tmt_pangkat, d.jabatan, d.tmt_jabatan, d.eselon_id, d.eselon, d.tmt_eselon
			, 
			floor
			(
			d.masa_kerja_tahun + 
			case
			when d.masa_kerja_bulan + months_between(to_date(''01' || pperiode || ''', ''ddmmyyyy''), d.tmt_pangkat) = 12
			then 1
			when d.masa_kerja_bulan + months_between(to_date(''01' || pperiode || ''', ''ddmmyyyy''), d.tmt_pangkat) > 12
			then  (d.masa_kerja_bulan+months_between(to_date(''01' || pperiode || ''', ''ddmmyyyy''), d.tmt_pangkat) )  / 12 
			else 0 
			end
			) masa_kerja_tahun
			, 
			case 
			when d.masa_kerja_bulan + months_between(to_date(''01' || pperiode || ''', ''ddmmyyyy''), d.tmt_pangkat) = 12
			then 0
			when d.masa_kerja_bulan + months_between(to_date(''01' || pperiode || ''', ''ddmmyyyy''), d.tmt_pangkat) > 12
			then mod(d.masa_kerja_bulan + months_between(to_date(''01' || pperiode || ''', ''ddmmyyyy''), d.tmt_pangkat), 12)
			else (d.masa_kerja_bulan + months_between(to_date(''01' || pperiode || ''', ''ddmmyyyy''), d.tmt_pangkat))
			end masa_kerja_bulan
			, d.diklat_struktural, d.tahun_diklat, d.jumlah_diklat_struktural, d.jumlah_diklat_nonstruktural, d.pendidikan
			, d.nama_sekolah, d.tahun_lulus, d.agama
			, ambil_umur_duk(d.tanggal_lahir, to_date(''01' || pperiode || ''', ''ddmmyyyy'')) usia
			, d.tipe_pegawai_id, d.satker_id
		from daftar_urutan_pegawai() d
		where 1=1
		--and (d.status_pegawai in (''cpns'',''pns''))
	';

	if coalesce(nullif(ptipepegawai,'') , null ) is not null then
		sqlquery := sqlquery || ' and d.tipe_pegawai_id like ''' || ptipepegawai || '%'' ';
	end if;

	if coalesce(nullif(psatker,'') , null ) is not null and psatker != '-1' then
		sqlquery := sqlquery || ' and d.satker_id like ''' || psatker || '%'' ';
	end if;

	sqlquery := sqlquery || ' 
	) d
	where 1=1
	order by coalesce(d.pangkat_id, 11) desc, d.tmt_pangkat
  		, coalesce(d.eselon_id, 99), d.tmt_eselon, d.masa_kerja_tahun desc, coalesce(d.jumlah_diklat_nonstruktural, 0::numeric) desc
  	';

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

end;
$body$
language plpgsql volatile cost 100;
alter function pinsertduk(character varying, character varying, character varying) owner to postgres;

drop function if exists pinsertpensiun(character varying, character varying, character varying);
create or replace function pinsertpensiun(pperiode character varying, psatker character varying, puserappid character varying)
  returns void as
$body$
declare
	sqlquery text;
	vuserappid numeric;
begin
	--select pinsertpensiun('032024', '', '')
	--select pinsertpensiun('032024', '01', '')

	if coalesce(nullif(puserappid,'') , null ) is not null then
		vuserappid:= puserappid::numeric;
	else
		vuserappid:= -1::numeric;
	end if;
	
	sqlquery:= '';
	if coalesce(nullif(psatker,'') , null ) is null
	then
		sqlquery := 'delete from pensiun where 
		periode = ''' || pperiode || ''' and user_app_id = ' || vuserappid;
   	else
		sqlquery := 'delete from pensiun where 
		periode = ''' || pperiode || ''' and user_app_id = ' || vuserappid || ' 
		and satker_id like ''' || psatker || '%''
		';
   	end if;

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

	sqlquery := '
	insert into pensiun 
	(
		pegawai_id, nip_lama, nip_baru, nama, no_bkn, tanggal_bkn, sk_pensiun, tanggal_pensiun
		, tmt_pensiun, tmt_cpns, tanggal_lahir, jenis_kelamin, gol_ruang, eselon, jabatan
		, alamat, masa_kerja, usia, usia_tahun, usia_batas, satker_id, periode , user_app_id
	)
	select
		pegawai_id, nip_lama, nip_baru, nama, '''' no_bkn, tanggal_bkn
		, '''' sk_pensiun, tanggal_pensiun, tmt_pensiun, tmt_cpns
		, tanggal_lahir, jenis_kelamin, gol_ruang, eselon, jabatan, alamat, masa_kerja, usia
		, usia_tahun, usia_batas, satker_id, '''||pperiode||''' periode, ' || vuserappid || ' user_app_id
	from
	(
		select
			a.pegawai_id, a.nip_lama, a.nip_baru, a.nama
			, a.tanggal_bkn, a.tmt_pensiun
			, a.usia, a.usia_tahun, a.usia_batas
			, a.tipe_pegawai_id, a.tmt_cpns, a.tanggal_lahir, a.jenis_kelamin, a.alamat
			, a.masa_kerja_tahun || '' - '' || a.masa_kerja_bulan masa_kerja
			, a.gol_ruang, a.eselon, a.jabatan, a.satker_id, a.eselon_id, a.eselon_group_id
			,
			--untuk pejabat
			case when
			(
				a.tipe_pegawai_id = ''11'' and ( a.eselon_group_id = ''1'' or a.eselon_group_id = ''2'' )
				and usia_batas >= 60
			)
			--untuk dokter atau fungsional guru
			or
			(
				(
					a.tipe_pegawai_id = ''21'' or 
					( a.tipe_pegawai_id = ''22'' and lower(jabatan) like ''%dokter%'' )
				)
				and usia_batas >= 60
			) then a.tanggal_pensiun_60
			else a.tanggal_pensiun_58
			end tanggal_pensiun
		from 
		(
			select
				to_date(to_char(tanggal_lahir, ''dd-mm-'') || substr('''||pperiode||''',3, 4), ''dd-mm-yyyy'') tanggal_bkn
				, case when tanggal_lahir is not null then to_date(to_char(tanggal_lahir, ''dd-'') || to_char(add_months(tanggal_lahir, (60 * 12)),  ''mm-yyyy''), ''dd-mm-yyyy'') end tanggal_pensiun_60
				, case when tanggal_lahir is not null then to_date(to_char(tanggal_lahir, ''dd-'') || to_char(add_months(tanggal_lahir, (58 * 12)),  ''mm-yyyy''), ''dd-mm-yyyy'') end tanggal_pensiun_58
				,
				case when tanggal_lahir is not null then
					to_date
					(
						case when tgl_bulan = ''12'' then
						to_char( add_months( to_date(''01'' || tgl_bulan || (substr('''||pperiode||''', 3, 4)::numeric - 1), ''ddmmyyyy''), 1), ''dd-mm-yyyy'')
						else to_char(add_months(to_date(''01'' || tgl_bulan || substr('''||pperiode||''', 3, 4), ''ddmmyyyy''), 1), ''dd-mm-yyyy'') end
					, ''dd-mm-yyyy'')
				end tmt_pensiun
				, ambil_umur_duk(a.tanggal_lahir, to_date(''01'' || '''||pperiode||''', ''ddmmyyyy'')) usia
				,
				case when (now_bulan - tgl_bulan::numeric) < 0 then
				now_tahun - tgl_tahun::numeric - 1
				else now_tahun - to_char(tanggal_lahir, ''yyyy'')::numeric end
				usia_tahun
				,
				case when (to_char(tgl_periode, ''mm'')::numeric) - tgl_bulan::numeric < 0 then
				to_char(tgl_periode, ''yyyy'')::numeric - tgl_tahun::numeric - 1
				else to_char(tgl_periode, ''yyyy'')::numeric - tgl_tahun::numeric end usia_batas
				, b.masa_kerja_tahun, b.masa_kerja_bulan, b.gol_ruang, c.eselon, c.jabatan, c.eselon_id
				, substring(c.eselon_id::text, 1, 1) eselon_group_id
				, a.pegawai_id, a.nip_lama, a.format_nip_baru nip_baru, a.vnama_lengkap nama, a.alamat
				, a.jenis_kelamin, a.tipe_pegawai_id, d.tmt_cpns tmt_cpns, a.tanggal_lahir, a.satker_id
			from
			(
				select
				to_char(tanggal_lahir, ''mm'') tgl_bulan
				, to_char(tanggal_lahir, ''yyyy'') tgl_tahun
				, a.*
				from pegawai a
			) a
			left join
			(
				select
				a.pangkat_riwayat_id, a.pangkat_id, b.kode gol_ruang, a.tmt_pangkat
				, a.masa_kerja_tahun, a.masa_kerja_bulan
				from pangkat_riwayat a
				left join pangkat b on a.pangkat_id = b.pangkat_id
			) b on a.pangkat_riwayat_id = b.pangkat_riwayat_id
			left join
			(
				select a.jabatan_riwayat_id, coalesce(a.eselon_id,99) eselon_id, b.nama eselon, a.tmt_jabatan, a.nama jabatan
				from jabatan_riwayat a
				left join eselon b on a.eselon_id = b.eselon_id
			) c on a.jabatan_riwayat_id = c.jabatan_riwayat_id
			left join sk_cpns d on a.pegawai_id = d.pegawai_id 
			, 
			(
				select
				to_char(now(), ''mm'')::numeric now_bulan
				, to_char(now(), ''yyyy'')::numeric now_tahun
				, to_date(''01'' || '''||pperiode||''', ''ddmmyyyy'') tgl_periode
			) x
			where 1=1 and a.status_pegawai in (1,2)
		) a
		where 1 = 1
		and
		(
			--untuk pejabat
			(
				a.tipe_pegawai_id = ''11'' and ( a.eselon_group_id = ''1'' or a.eselon_group_id = ''2'' )
				and usia_batas >= 60
			)
			--untuk dokter atau fungsional guru
			or
			(
				(
					a.tipe_pegawai_id = ''21'' or 
					( a.tipe_pegawai_id = ''22'' and lower(jabatan) like ''%dokter%'' )
				)
				and usia_batas >= 60
			)
			--selain itu
			or
			(
				(
					(
						a.tipe_pegawai_id in (''12'', ''21'', ''23'') or 
						( a.tipe_pegawai_id = ''22'' and lower(jabatan) not like ''%dokter%'' )
					)
					or
					(
						a.tipe_pegawai_id = ''11'' and a.eselon_group_id::numeric > 2
					)
				)
				and usia_batas >= 58
			)
		)
		and a.satker_id like ''' || psatker || '%''
		and a.tmt_pensiun = to_date(''01-''||substr('''||pperiode||''', 1 ,2) || ''-'' || substr('''||pperiode||''', 3 ,4), ''dd-mm-yyyy'')
	) a
	where 1=1
	and substr('''||pperiode||''', 3 ,4) = to_char(a.tanggal_pensiun, ''yyyy'')
	order by a.pegawai_id
	';

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

end;
$body$
language plpgsql volatile cost 100;
alter function pinsertpensiun(character varying, character varying, character varying) owner to postgres;

alter table kgb alter column tanggal_proses type timestamp without time zone using cast(tanggal_proses as date);
drop function if exists pinsertkgb(character varying, character varying);
create or replace function pinsertkgb(pperiode character varying, psatker character varying)
  returns void as
$body$
declare
	sqlquery text;
	vuserappid numeric;
begin
	--select pinsertkgb('032024', '')
	--select pinsertkgb('032024', '01')

	sqlquery:= '';
	if coalesce(nullif(psatker,'') , null ) is null
	then
		sqlquery := 'delete from kgb where 
		periode = ''' || pperiode || '''
		and coalesce(nullif(satker_id_generate,'''') , null ) is null
		';
   	else
		sqlquery := 'delete from kgb where 
		periode = ''' || pperiode || '''
		and satker_id_generate = ''' || psatker || '''
		';
   	end if;

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

	sqlquery := '
	insert into kgb
	(
		periode, pegawai_id, pangkat_id
		, pejabat_penetap_id, pejabat_penetap,no_sk,  no_sk_lama, tanggal_sk_lama, pejabat_lama
		, tanggal_sk, tmt_baru, tmt_lama, masa_kerja_tahun, masa_kerja_bulan, mk_tahun_lama, mk_bulan_lama
		, gaji_baru, gaji_lama, nip_lama, nip_baru
		, nama, gol_ruang, satker_id, satker_id_generate, tanggal_proses
	)
	select
		'''||pperiode||''' periode, v3.pegawai_id, v3.pangkat_id, null pejabat_penetap_id
		, upper(''kepala '' || v3.vsatkerinduk) pejabat_penetap
		, ''822.'' || substring(v3.pangkat_id::text, 1, 1) || ''/    /''|| s.kode ||''/'' || to_char(now(), ''yyyy'') no_sk
		, v3.no_sk no_sk_lama, v3.tanggal_sk tanggal_sk_lama, v3.pejabat_penetap pejabat_lama
		, to_date(''01''|| '''||pperiode||''' , ''ddmmyyyy'') tanggal_sk
		, to_date(''01''|| '''||pperiode||''' , ''ddmmyyyy'') tmt_baru
		, v3.tmtlama tmt_lama, v3.msthacuan + (substring('''||pperiode||''',3, 4)::numeric - v3.thacuan) masa_kerja_tahun
		, 0 as masa_kerja_bulan, v3.masa_kerja_tahun mk_tahun_lama, v3.masa_kerja_bulan mk_bulan_lama
		, gp.gaji gaji_baru, v3.gajilama gaji_lama, nip_lama, nip_baru, v3.nama, v3.gol_ruang
		, v3.satker_id, '''||psatker||''', now()
	from
	(
		select
			v2.satker_id, v2.vsatkerid, v2.vsatkerinduk, v2.pegawai_id, v2.nama, v2.tmt_lama tmtlama, v2.msthlama, v2.msbllama
			, v2.gajilama, v2.pangkat_id, v2.nip_lama, v2.nip_baru, v2.no_sk, v2.tanggal_sk, v2.pejabat_penetap
			, v2.masa_kerja_tahun, v2.masa_kerja_bulan, v2.gol_ruang
			,
			case when (((v2.jenis = 0) and (v2.modth = 1)) or ((v2.jenis = 1) and (v2.modth = 0))) then v2.th1a + 1 else th1a end thacuan, v2.blacuan
			, case when (((v2.jenis = 0) and (v2.modth = 1)) or ((v2.jenis = 1) and (v2.modth = 0))) then v2.msth1a + 1 else msth1a end msthacuan
		from
		(
			select
				case when ((v1.msbllama <> 0) and (v1.bl1a > 12)) then v1.bl1a - 12 else v1.bl1a end blacuan
				, case when ((v1.msbllama <> 0) and (v1.bl1a > 12)) then v1.th0 + 1 else v1.th0 end th1a
				, mod(v1.msth1a, 2) as modth , v1.*
			from
			(
				select
					case when v0.msbllama <> 0 then v0.msthlama + 1 else v0.msthlama end msth1a
					, case when v0.msbllama <> 0 then v0.bl0 + (12 - msbllama) else v0.bl0 end bl1a
					, ambil_satker_id(v0.satker_id) vsatkerid, ambil_satker_induk(v0.satker_id) vsatkerinduk
					, v0.*
				from
				(
					select
						a.pegawai_id, a.nip_lama, a.nip_baru, a.nama, a.satker_id
						, a.gaji_riwayat_id, a.pangkat_id, a.gol_ruang
						, a.tmt_lama, a.no_sk, a.tanggal_sk, a.pejabat_penetap
						, a.masa_kerja_tahun, a.masa_kerja_bulan, a.gajilama
						, a.th0, a.bl0, a.jenis
						, case when t_masa_kerja < t_gaji then a.masa_kerja_tahun else a.tahun_baru end msthlama
						, case when t_masa_kerja < t_gaji then masa_kerja_bulan else a.bulan_baru end msbllama
					from
					(
						select
							a.pegawai_id, a.nip_lama, a.format_nip_baru nip_baru, a.vnama_lengkap nama, a.satker_id
							, a.gaji_riwayat_id, coalesce(b.pangkat_id, 11) pangkat_id, b.gol_ruang
							, b.tmt_sk tmt_lama, b.no_sk, b.tanggal_sk, b.pejabat_penetap
							, coalesce(b.gaji_pokok,0) gajilama, coalesce(b.th0,0) th0, coalesce(b.bl0,0) bl0
							, (coalesce(ms.tahun_baru,0)*12) + coalesce(ms.bulan_baru,0) t_masa_kerja
							, (coalesce(b.masa_kerja_tahun,0)*12) + coalesce(b.masa_kerja_bulan,0) t_gaji
							, coalesce(b.masa_kerja_tahun,0) masa_kerja_tahun, coalesce(ms.tahun_baru,0) tahun_baru
							, coalesce(b.masa_kerja_bulan,0) masa_kerja_bulan, coalesce(ms.bulan_baru,0) bulan_baru
							, (case when((b.pangkat_id>=12) and (b.pangkat_id<=24)) then 1 else 0 end) jenis
						from pegawai a
						left join
						(
							select
							a.gaji_riwayat_id, a.pegawai_id, a.no_sk, a.tanggal_sk, a.tmt_sk, a.gaji_pokok
							, b.kode gol_ruang, a.pangkat_id, substring(a.pangkat_id::text, 1,1) group_pangkat
							, a.masa_kerja_tahun, a.masa_kerja_bulan
							, case when a.pejabat_penetap_id is null then a.pejabat_penetap else c.jabatan end pejabat_penetap
							, to_char(a.tmt_sk, ''yyyy'')::numeric th0
							, to_char(a.tmt_sk, ''mm'')::numeric bl0
							from gaji_riwayat a
							left join pangkat b on a.pangkat_id = b.pangkat_id
							left join pejabat_penetap c on a.pejabat_penetap_id = c.pejabat_penetap_id
						) b on a.gaji_riwayat_id = b.gaji_riwayat_id
						left join tambahan_masa_kerja ms on b.pegawai_id = ms.pegawai_id
						where a.satker_id like '''||psatker||''' || ''%'' and a.status_pegawai = 2
					) a
					where 1=1
				) v0
				where 1=1
			) v1
			where 1=1
		) v2
		where 1=1
	) v3
	left join (select satker_id, case when coalesce(nullif(kode, ''''), null) is null then '''' else kode end kode from satker) s on v3.vsatkerid = s.satker_id
	left join gaji_pokok gp on v3.pangkat_id = gp.pangkat_id and v3.msthacuan + (substring('''||pperiode||''',3, 4)::numeric - v3.thacuan) = gp.masa_kerja
	where (mod((substring('''||pperiode||''',3, 4)::numeric - thacuan),2)=0) and (substring('''||pperiode||''',1, 2)::numeric = blacuan) and to_char(v3.tmtlama, ''mmyyyy'') <> '''||pperiode||'''
	';

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

end;
$body$
language plpgsql volatile cost 100;
alter function pinsertkgb(character varying, character varying) owner to postgres;

/*
alter table pangkat add column pangkat_turun_id integer;
update pangkat as u
set
pangkat_turun_id= aggr.pangkat_turun_id
from
(
	select
	pangkat_id
	, case pangkat_id when 21 then 14 when 31 then 24 when 41 then 34 else pangkat_id - 1 end pangkat_turun_id
	from pangkat where pangkat_id > 11 and pangkat_id <= 45
) as aggr
where u.pangkat_id = aggr.pangkat_id;

alter table pangkat add column pangkat_naik_id integer;
update pangkat as u
set
pangkat_naik_id= aggr.pangkat_naik_id
from
(
	select
	pangkat_id
	, case pangkat_id when 14 then 21 when 24 then 31 when 34 then 41 when 45 then 45 else pangkat_id + 1 end pangkat_naik_id
	from pangkat where pangkat_id > 11 and pangkat_id <= 45
) as aggr
where u.pangkat_id = aggr.pangkat_id;

alter table kp add column pangkat_akhir_id integer;
*/

create or replace function last_day(date)
returns date as
$$
select (date_trunc('month', $1) + interval '1 month - 1 day')::date;
$$ language 'sql'
immutable strict;

alter table kp add column gol_ruang_lama character varying, add column masa_kerja_lama character varying;
alter table kp alter column pegawai_id type numeric using cast(pegawai_id as numeric);
alter table kp alter column gaji_lama type numeric using cast(gaji_lama as numeric);
alter table kp alter column gaji_baru type numeric using cast(gaji_baru as numeric);

create or replace function pinsertkpumum(pperiode character varying, psatker character varying)
  returns void as
$body$
declare
	sqlquery text;
	vuserappid numeric;
begin
	--select pinsertkpumum('042024', '')
	--select pinsertkpumum('042024', '01')

	sqlquery:= '';
	if coalesce(nullif(psatker,'') , null ) is null
	then
		sqlquery := 'delete from kp where 
		periode = ''' || pperiode || '''
		and satker_id_generate = upper(''reguler'')
		';
   	else
		sqlquery := 'delete from kp where 
		periode = ''' || pperiode || '''
		and satker_id like '''||psatker||''' || ''%'' and satker_id_generate = upper(''reguler'')
		';
   	end if;

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

	sqlquery := '
	insert into kp
	(
		periode, satker_id_generate, tanggal_proses
		, pegawai_id, nip_lama, nip_baru, nama, no_sk, tanggal_sk, tmt_baru, tmt_lama, gaji_lama, gaji_baru
		, pejabat_penetap, gol_ruang, gol_ruang_lama
		, masa_kerja, masa_kerja_lama, pendidikan--, stlud, no_stlud, tanggal_stlud, no_nota, tanggal_nota
		, satker_id, pangkat0, mskerjath0, mskerjabl0
	)
	select
		periode, satker_id_generate, tanggal_proses
		, pegawai_id, nip_lama, nip_baru, nama, no_sk, tanggal_sk, tmt_baru, tmt_lama, gaji_lama, gaji_baru
		, pejabat_penetap, gol_ruang, gol_ruang_lama
		, masa_kerja, masa_kerja_lama, pendidikan--, stlud, no_stlud, tanggal_stlud, no_nota_bkn, tanggal_nota_bkn
		, satker_id, pangkat0, mskerjath0, mskerjabl0
	from
	(
		select
			add_months(a.tmt_pangkat,12 * 4) tgl_1
			, to_date( to_char(last_day(to_date(''01'' || '''||pperiode||''', ''ddmmyyyy'')), ''dd'') || '''||pperiode||''', ''ddmmyyyy'') tgl_2
			, '''||pperiode||''' periode, upper(''reguler'') satker_id_generate, now() tanggal_proses
			, a.pegawai_id, a.nip_lama, a.nip_baru, a.nama, '''' no_sk
			, to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy'') tanggal_sk, to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy'') tmt_baru, tmt_pangkat tmt_lama
			, upper(''kepala badan kepegawaian daerah'') pejabat_penetap
			, a.gol_ruang, a.gol_ruang_lama, a.gaji_pokok_lama gaji_lama, a.gaji_pokok gaji_baru
			,
			case when mskerjath0 = 0 then 0
			else floor(((mskerjath0 * 12) + mskerjabl0 + months_between(to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy''), tmt_pangkat)) / 12) end
			|| '' - '' ||
			case when mskerjath0 = 0 and mskerjabl0 = 0 then 0
			else
			floor((mod((mskerjath0 * 12) + mskerjabl0 + months_between(to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy''), tmt_pangkat), 12)))
			end masa_kerja
			, mskerjath0 || '' - '' || mskerjabl0 masa_kerja_lama
			, pendidikan_jurusan pendidikan, '''' stlud, '''' no_stlud, '''' tanggal_stlud, '''' no_nota_bkn, '''' tanggal_nota_bkn
			, a.satker_id, pangkat0, mskerjath0, mskerjabl0
			, a.pendidikan_id, a.pangkatidbaru, a.eselon_id, a.tipe_pegawai_id::text tipe_pegawai_id
		from opt.kp_umum_fungsional() a
		where 1=1
	) a
	inner join 
	(
		select
		pendidikan_id, pangkat_minimal, pangkat_maksimal, nama pendidikan_nama
		from pendidikan
	)
	d on 
	(
	    a.pendidikan_id = d.pendidikan_id and a.pangkatidbaru between pangkat_minimal and pangkat_maksimal
	)
	or
	(
	    a.pendidikan_id = d.pendidikan_id
	    and 
	    case
	    when upper(pendidikan_nama) in (upper(''slta''), upper(''di''), upper(''dii'')) and a.eselon_id in (51, 52) then 32
	    when upper(pendidikan_nama) in (upper(''slta''), upper(''di''), upper(''dii'')) and a.eselon_id = 42 then 33
	    when upper(pendidikan_nama) in (upper(''slta''), upper(''di''), upper(''dii'')) and a.eselon_id = 41 then 34
	    when upper(pendidikan_nama) in (upper(''slta''), upper(''di''), upper(''dii'')) and a.eselon_id = 32 then 41
	    when upper(pendidikan_nama) in (upper(''diii'')) and a.eselon_id in (51, 52, 42) then 33
	    when upper(pendidikan_nama) in (upper(''diii'')) and a.eselon_id = 41 then 34
	    when upper(pendidikan_nama) in (upper(''diii'')) and a.eselon_id = 32 then 41
	    when upper(pendidikan_nama) in (upper(''diii'')) and a.eselon_id = 31 then 42
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id in (51, 52, 41, 42) then 34
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id = 32 then 41
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id = 31 then 42
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id = 22 then 43
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id = 21 then 44
	    when upper(pendidikan_nama) in (upper(''s2'')) and a.eselon_id in (51, 52, 41, 42, 32) then 41
	    when upper(pendidikan_nama) in (upper(''s2'')) and a.eselon_id = 31 then 42
	    when upper(pendidikan_nama) in (upper(''s2'')) and a.eselon_id = 22 then 43
	    when upper(pendidikan_nama) in (upper(''s2'')) and a.eselon_id = 21 then 44
	    when upper(pendidikan_nama) in (upper(''s3'')) and a.eselon_id in (51, 52, 41, 42, 32, 31) then 42
	    when upper(pendidikan_nama) in (upper(''s3'')) and a.eselon_id = 22 then 43
	    when upper(pendidikan_nama) in (upper(''s3'')) and a.eselon_id = 21 then 44
	    else null
	    end
	    IS NOT NULL
	)
	where 1=1 and tgl_1 <= tgl_2
	and a.satker_id like '''||psatker||''' || ''%'' and a.tipe_pegawai_id like ''1%''
	order by pangkat0 desc, mskerjath0 desc, mskerjabl0 desc;
	';

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

end;
$body$
language plpgsql volatile cost 100;
alter function pinsertkpumum(character varying, character varying) owner to postgres;

create or replace function pinsertkpfungsional(pperiode character varying, psatker character varying)
  returns void as
$body$
declare
	sqlquery text;
	vuserappid numeric;
begin
	--select pinsertkpfungsional('042024', '')
	--select pinsertkpfungsional('042024', '01')

	sqlquery:= '';
	if coalesce(nullif(psatker,'') , null ) is null
	then
		sqlquery := 'delete from kp where 
		periode = ''' || pperiode || '''
		and satker_id_generate = upper(''pilihan_fungsional'')
		';
   	else
		sqlquery := 'delete from kp where 
		periode = ''' || pperiode || '''
		and satker_id like '''||psatker||''' || ''%'' and satker_id_generate = upper(''pilihan_fungsional'')
		';
   	end if;

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

	sqlquery := '
	insert into kp
	(
		periode, satker_id_generate, tanggal_proses
		, pegawai_id, nip_lama, nip_baru, nama, no_sk, tanggal_sk, tmt_baru, tmt_lama, gaji_lama, gaji_baru
		, pejabat_penetap, gol_ruang, gol_ruang_lama
		, masa_kerja, masa_kerja_lama, pendidikan--, stlud, no_stlud, tanggal_stlud, no_nota, tanggal_nota
		, satker_id, pangkat0, mskerjath0, mskerjabl0
	)
	select
		periode, satker_id_generate, tanggal_proses
		, pegawai_id, nip_lama, nip_baru, nama, no_sk, tanggal_sk, tmt_baru, tmt_lama, gaji_lama, gaji_baru
		, pejabat_penetap, gol_ruang, gol_ruang_lama
		, masa_kerja, masa_kerja_lama, pendidikan--, stlud, no_stlud, tanggal_stlud, no_nota_bkn, tanggal_nota_bkn
		, satker_id, pangkat0, mskerjath0, mskerjabl0
	from
	(
		select
			add_months(a.tmt_pangkat,12 * 4) tgl_1
			, to_date( to_char(last_day(to_date(''01'' || '''||pperiode||''', ''ddmmyyyy'')), ''dd'') || '''||pperiode||''', ''ddmmyyyy'') tgl_2
			, '''||pperiode||''' periode, upper(''pilihan_fungsional'') satker_id_generate, now() tanggal_proses
			, a.pegawai_id, a.nip_lama, a.nip_baru, a.nama, '''' no_sk
			, to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy'') tanggal_sk, to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy'') tmt_baru, tmt_pangkat tmt_lama
			, upper(''kepala badan kepegawaian daerah'') pejabat_penetap
			, a.gol_ruang, a.gol_ruang_lama, a.gaji_pokok_lama gaji_lama, a.gaji_pokok gaji_baru
			,
			case when mskerjath0 = 0 then 0
			else floor(((mskerjath0 * 12) + mskerjabl0 + months_between(to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy''), tmt_pangkat)) / 12) end
			|| '' - '' ||
			case when mskerjath0 = 0 and mskerjabl0 = 0 then 0
			else
			floor((mod((mskerjath0 * 12) + mskerjabl0 + months_between(to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy''), tmt_pangkat), 12)))
			end masa_kerja
			, mskerjath0 || '' - '' || mskerjabl0 masa_kerja_lama
			, pendidikan_jurusan pendidikan, '''' stlud, '''' no_stlud, '''' tanggal_stlud, '''' no_nota_bkn, '''' tanggal_nota_bkn
			, a.satker_id, pangkat0, mskerjath0, mskerjabl0
			, a.pendidikan_id, a.pangkatidbaru, a.eselon_id, a.tipe_pegawai_id::text tipe_pegawai_id
		from opt.kp_umum_fungsional() a
		where 1=1
	) a
	inner join 
	(
		select
		pendidikan_id, pangkat_minimal, pangkat_maksimal, nama pendidikan_nama
		from pendidikan
	)
	d on 
	(
	    a.pendidikan_id = d.pendidikan_id and a.pangkatidbaru between pangkat_minimal and pangkat_maksimal
	)
	or
	(
	    a.pendidikan_id = d.pendidikan_id
	    and 
	    case
	    when upper(pendidikan_nama) in (upper(''slta''), upper(''di''), upper(''dii'')) and a.eselon_id in (51, 52) then 32
	    when upper(pendidikan_nama) in (upper(''slta''), upper(''di''), upper(''dii'')) and a.eselon_id = 42 then 33
	    when upper(pendidikan_nama) in (upper(''slta''), upper(''di''), upper(''dii'')) and a.eselon_id = 41 then 34
	    when upper(pendidikan_nama) in (upper(''slta''), upper(''di''), upper(''dii'')) and a.eselon_id = 32 then 41
	    when upper(pendidikan_nama) in (upper(''diii'')) and a.eselon_id in (51, 52, 42) then 33
	    when upper(pendidikan_nama) in (upper(''diii'')) and a.eselon_id = 41 then 34
	    when upper(pendidikan_nama) in (upper(''diii'')) and a.eselon_id = 32 then 41
	    when upper(pendidikan_nama) in (upper(''diii'')) and a.eselon_id = 31 then 42
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id in (51, 52, 41, 42) then 34
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id = 32 then 41
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id = 31 then 42
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id = 22 then 43
	    when upper(pendidikan_nama) in (upper(''d.iv''), upper(''s1'')) and a.eselon_id = 21 then 44
	    when upper(pendidikan_nama) in (upper(''s2'')) and a.eselon_id in (51, 52, 41, 42, 32) then 41
	    when upper(pendidikan_nama) in (upper(''s2'')) and a.eselon_id = 31 then 42
	    when upper(pendidikan_nama) in (upper(''s2'')) and a.eselon_id = 22 then 43
	    when upper(pendidikan_nama) in (upper(''s2'')) and a.eselon_id = 21 then 44
	    when upper(pendidikan_nama) in (upper(''s3'')) and a.eselon_id in (51, 52, 41, 42, 32, 31) then 42
	    when upper(pendidikan_nama) in (upper(''s3'')) and a.eselon_id = 22 then 43
	    when upper(pendidikan_nama) in (upper(''s3'')) and a.eselon_id = 21 then 44
	    else null
	    end
	    IS NOT NULL
	)
	where 1=1 and tgl_1 <= tgl_2
	and a.satker_id like '''||psatker||''' || ''%'' and a.tipe_pegawai_id like ''1%''
	order by pangkat0 desc, mskerjath0 desc, mskerjabl0 desc;
	';

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

end;
$body$
language plpgsql volatile cost 100;
alter function pinsertkpfungsional(character varying, character varying) owner to postgres;

create or replace function pinsertkppilihan(pperiode character varying, psatker character varying)
  returns void as
$body$
declare
	sqlquery text;
	vuserappid numeric;
begin
	--select pinsertkppilihan('042024', '')
	--select pinsertkppilihan('042024', '01')

	sqlquery:= '';
	if coalesce(nullif(psatker,'') , null ) is null
	then
		sqlquery := 'delete from kp where 
		periode = ''' || pperiode || '''
		and satker_id_generate = upper(''pilihan_struktural'')
		';
   	else
		sqlquery := 'delete from kp where 
		periode = ''' || pperiode || '''
		and satker_id like '''||psatker||''' || ''%'' and satker_id_generate = upper(''pilihan_struktural'')
		';
   	end if;

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

	sqlquery := '
	insert into kp
	(
		periode, satker_id_generate, tanggal_proses
		, pegawai_id, nip_lama, nip_baru, nama, no_sk, tanggal_sk, tmt_baru, tmt_lama, gaji_lama, gaji_baru
		, pejabat_penetap, gol_ruang, gol_ruang_lama
		, masa_kerja, masa_kerja_lama, pendidikan--, stlud, no_stlud, tanggal_stlud, no_nota, tanggal_nota
		, satker_id, pangkat0, mskerjath0, mskerjabl0
	)
	select
		periode, satker_id_generate, tanggal_proses
		, pegawai_id, nip_lama, nip_baru, nama, no_sk, tanggal_sk, tmt_baru, tmt_lama, gaji_lama, gaji_baru
		, pejabat_penetap, gol_ruang, gol_ruang_lama
		, masa_kerja, masa_kerja_lama, pendidikan--, stlud, no_stlud, tanggal_stlud, no_nota_bkn, tanggal_nota_bkn
		, satker_id, pangkat0, mskerjath0, mskerjabl0
	from
	(
	    select
	    add_months(a.tmt_pangkat,12 * 4) tgl_1
	    , to_date( to_char(last_day(to_date(''01'' || '''||pperiode||''', ''ddmmyyyy'')), ''dd'') || '''||pperiode||''', ''ddmmyyyy'') tgl_2
	    , '''||pperiode||''' periode, upper(''pilihan_struktural'') satker_id_generate, now() tanggal_proses
	    , a.pegawai_id, a.nip_lama, a.nip_baru, a.nama, '''' no_sk
	    , to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy'') tanggal_sk, to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy'') tmt_baru, tmt_pangkat tmt_lama
	    , upper(''kepala badan kepegawaian daerah'') pejabat_penetap
	    , a.gol_ruang, a.gol_ruang_lama, a.gaji_pokok_lama gaji_lama, a.gaji_pokok gaji_baru
	    ,
	    case when mskerjath0 = 0 then 0
	    else floor(((mskerjath0 * 12) + mskerjabl0 + months_between(to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy''), tmt_pangkat)) / 12) end
	    || '' - '' ||
	    case when mskerjath0 = 0 and mskerjabl0 = 0 then 0
	    else
	    floor((mod((mskerjath0 * 12) + mskerjabl0 + months_between(to_date( ''01'' || '''||pperiode||''', ''ddmmyyyy''), tmt_pangkat), 12)))
	    end masa_kerja
	    , mskerjath0 || '' - '' || mskerjabl0 masa_kerja_lama
	    , pendidikan_jurusan pendidikan, '''' stlud, '''' no_stlud, '''' tanggal_stlud, '''' no_nota_bkn, '''' tanggal_nota_bkn
	    , a.satker_id, pangkat0, mskerjath0, mskerjabl0
	    , a.pendidikan_id, a.pangkatidbaru, a.eselon_id, a.tipe_pegawai_id::text tipe_pegawai_id
	    from
	    (
	        select
	        case when a.eselon_group = ''3'' then 1 else 0 end status_pangkat_eselon3
	        , case when a.pangkatidturun = a.pangkat0 then 1 else 0 end status_pangkat_turun
	        , a.*
	        from
	        (
	            select
	            case pangkat0 when 21 then 14 when 31 then 24 when 41 then 34
	            else pangkat0 - 1
	            end pangkatidturun
	            , substring(a.eselon_id::text, 1,1) eselon_group
	            , a.*
	            from opt.kp_umum_fungsional() a
	            where 1=1 and a.pangkat0 <= a.pangkat_maksimal
	        ) a
	        where 1=1
	    ) a
	    where 1=1
	    and ( status_pangkat_turun = 1 or status_pangkat_eselon3 = 1)
	    and to_char(tmt_pangkat,''mm'') = substr('''||pperiode||''',1,2)
	) a
	where 1=1
	--and tgl_1 <= tgl_2
	and a.satker_id like '''||psatker||''' || ''%'' and a.tipe_pegawai_id like ''1%''
	order by pangkat0 desc, mskerjath0 desc, mskerjabl0 desc
	';

	if coalesce(nullif(sqlquery,'') , null ) is not null then
		--raise notice 'sql %',sqlquery;
		execute sqlquery;
	end if;

end;
$body$
language plpgsql volatile cost 100;
alter function pinsertkppilihan(character varying, character varying) owner to postgres;

create or replace function pinsertkp(pperiode character varying, psatker character varying)
  returns void as
$body$
declare
	sqlquery text;
	vuserappid numeric;
begin
	--select pinsertkp('042024', '')
	--select pinsertkp('042024', '01')

	perform pinsertkpumum(pperiode, psatker);
	perform pinsertkppilihan(pperiode, psatker);

end;
$body$
language plpgsql volatile cost 100;
alter function pinsertkp(character varying, character varying) owner to postgres;

--indexing
--====================================================================================================================
drop index if exists duk_indexing;
create index duk_indexing on duk (satker_id_generate, duk);

--drop index if exists jabatan_riwayat_indexing;
--create index jabatan_riwayat_indexing on jabatan_riwayat (eselon_id, tmt_jabatan desc);

--cursor
--====================================================================================================================
drop type if exists opt.kp_umum_fungsional_type;
create type opt.kp_umum_fungsional_type as (pegawai_id numeric, satker_id character varying, nip_lama character varying, nip_baru character varying, nama character varying
, tipe_pegawai_id numeric, tmt_pangkat date, mskerjath0 numeric, mskerjabl0 numeric, pendidikan_id numeric
, pendidikan_jurusan character varying, pangkat0 numeric, pangkatidbaru numeric, eselon_id numeric
, pangkat_maksimal numeric, pangkat_minimal numeric
, gol_ruang_lama character varying, gol_ruang character varying
, gaji_pokok_lama numeric, gaji_pokok numeric
);

drop function if exists opt.kp_umum_fungsional();
--select * from opt.kp_umum_fungsional();
create or replace function opt.kp_umum_fungsional() returns setof opt.kp_umum_fungsional_type as $$
declare
cur refcursor;
query text;
rec opt.kp_umum_fungsional_type%rowtype;
begin
	query := '
	select
		a.pegawai_id, a.satker_id, a.nip_lama, a.nip_baru, a.nama, a.tipe_pegawai_id
		, a.tmt_pangkat, a.mskerjath0, a.mskerjabl0, a.pendidikan_id, a.pendidikan_jurusan
		, a.pangkat0, a.pangkatidbaru, a.eselon_id, a.pangkat_maksimal, a.pangkat_minimal
		, pn1.kode gol_ruang_lama, pn2.kode gol_ruang
		, a.gaji_pokok gaji_pokok_lama, coalesce(gp.gaji,0) gaji_pokok
	from
	(
		select
			a.pegawai_id, a.satker_id, a.nip_lama, a.nip_baru, a.nama, a.tipe_pegawai_id
			, a.tmt_pangkat, a.mskerjath0, a.mskerjabl0, a.pendidikan_id, a.pendidikan_jurusan
			, a.pangkat0, a.eselon_id, a.pangkat_maksimal, a.pangkat_minimal, a.gaji_pokok
			,
			case pangkat0 when 14 then 21 when 24 then 31 when 34 then 41 when 45 then 45
			else pangkat0 + 1
			end pangkatidbaru
		from
		(
			select
				a.pegawai_id, a.satker_id, a.nip_lama, a.nip_baru, a.nama, a.tipe_pegawai_id
				, case when vkondisi = 1 then tmt_awal_pangkat else tmt_akhir_pangkat end tmt_pangkat
				, case when vkondisi = 1 then pangkat_awal_id else pangkat_akhir_id end pangkat0
				, case when vkondisi = 1 then ms_kerja_awal_th else ms_kerja_akhir_th end mskerjath0
				, case when vkondisi = 1 then ms_kerja_awal_bl else ms_kerja_akhir_bl end mskerjabl0
				, a.pendidikan_id, a.pendidikan_jurusan, a.eselon_id, a.pangkat_maksimal, a.pangkat_minimal, a.gaji_pokok
			from
			(
				select
					p.pegawai_id, p.satker_id, p.nip_lama, p.format_nip_baru nip_baru, p.vnama_lengkap nama, p.tipe_pegawai_id
					, v.pangkat_id pangkat_akhir_id, aw.pangkat_id pangkat_awal_id
					, v.tmt_pangkat tmt_akhir_pangkat, aw.tmt_pangkat tmt_awal_pangkat
					, to_char(v.tmt_pangkat, ''yyyy'') tmt_pangkat_akhir_th, to_char(aw.tmt_pangkat, ''yyyy'') tmt_pangkat_awal_th
					, to_char(v.tmt_pangkat, ''mm'') tmt_pangkat_akhir_bl, to_char(aw.tmt_pangkat, ''mm'') tmt_pangkat_awal_bl
					, coalesce(v.masa_kerja_tahun, 0) ms_kerja_akhir_th, coalesce(aw.masa_kerja_tahun, 0) ms_kerja_awal_th
					, coalesce(v.masa_kerja_bulan, 0) ms_kerja_akhir_bl, coalesce(aw.masa_kerja_bulan, 0) ms_kerja_awal_bl
					, coalesce(gj.gaji_pokok,0) gaji_pokok
					,
					case
					when sp.tmt_cpns = aw.tmt_pangkat and jml_kp = 2 then 1
					else 0 end vkondisi
					, pd.pendidikan_id, jt.eselon_id, jt.pangkat_maksimal, jt.pangkat_minimal
					, pd.pendidikan || case when coalesce(nullif(pd.jurusan, ''''), null) is not null then '' '' || pd.jurusan else '''' end pendidikan_jurusan
				from pegawai p
				left join
				(
					select
						a.jabatan_riwayat_id, coalesce(a.eselon_id,99) eselon_id, a1.pangkat_maksimal, a1.pangkat_minimal
					from jabatan_riwayat a
					left join eselon a1 on a.eselon_id = a1.eselon_id
				) jt on p.jabatan_riwayat_id = jt.jabatan_riwayat_id
				left join
				(
					select 
					a.pendidikan_riwayat_id, a.pegawai_id, c.nama pendidikan, a.jurusan, a.nama nama_sekolah
					, to_char(a.tanggal_sttb, ''yyyy'') tahun, a.pendidikan_id
					from pendidikan_riwayat a
					left join pendidikan c on a.pendidikan_id = c.pendidikan_id
					where 1 = 1
				) pd on p.pendidikan_riwayat_id = pd.pendidikan_riwayat_id
				left join sk_cpns sp on p.pegawai_id = sp.pegawai_id
				--pangkat akhir
				left join
				(
					select
						a.pangkat_riwayat_id, a.pangkat_id, b.kode, b.nama, a.tmt_pangkat
						, a.masa_kerja_tahun, a.masa_kerja_bulan
					from pangkat_riwayat a
					left join pangkat b on a.pangkat_id = b.pangkat_id
				) v on p.pangkat_riwayat_id = v.pangkat_riwayat_id
				--pangkat awal
				left join
				(
					select
						a.pangkat_riwayat_id, a.pangkat_id, b.kode, b.nama, a.tmt_pangkat
						, a.masa_kerja_tahun, a.masa_kerja_bulan
					from pangkat_riwayat a
					left join pangkat b on a.pangkat_id = b.pangkat_id
				) aw on p.pangkat_awal_riwayat_id = aw.pangkat_riwayat_id
				left join
				(
					select count (1) jml_kp, pegawai_id
					from pangkat_riwayat
					group by pegawai_id
				) j on p.pegawai_id = j.pegawai_id
				left join
				(
					select
					a.gaji_riwayat_id, a.gaji_pokok
					from gaji_riwayat a
				) gj on p.gaji_riwayat_id = gj.gaji_riwayat_id
				where p.status_pegawai = 2
			) a
			where 1=1
		) a
		where 1=1
		and a.tmt_pangkat is not null
	) a
	left join pangkat pn1 on pn1.pangkat_id = a.pangkat0
	left join pangkat pn2 on pn2.pangkat_id = a.pangkatidbaru
	left join gaji_pokok gp on gp.pangkat_id = a.pangkatidbaru and masa_kerja = (a.mskerjath0 + 4)
	';

	open cur for execute query;
		fetch cur into rec;
			while found loop
			return next rec;
			fetch cur into rec;
		end loop;
	close cur;
end;
$$ language plpgsql strict;

drop type if exists daftar_urutan_pegawai_type;
create type daftar_urutan_pegawai_type as (pegawai_id numeric, nip_lama character varying, nip_baru character varying, nama character varying, ttl character varying
, jenis_kelamin character varying, status_pegawai character varying, pangkat_id numeric, gol_ruang character varying
, tmt_pangkat date, jabatan character varying, tmt_jabatan date, eselon_id numeric, eselon character varying
, tmt_eselon date, masa_kerja character varying, diklat_struktural character varying, tahun_diklat numeric
, jumlah_diklat_struktural numeric, jumlah_diklat_nonstruktural numeric
, pendidikan character varying, nama_sekolah character varying, tahun_lulus character varying, agama character varying
, usia character varying, tipe_pegawai_id character varying, satker_id character varying
, masa_kerja_tahun numeric, masa_kerja_bulan numeric, tempat_lahir character varying, tanggal_lahir date);

drop function if exists daftar_urutan_pegawai_type();
--select * from daftar_urutan_pegawai();
create or replace function daftar_urutan_pegawai() returns setof daftar_urutan_pegawai_type as $$
declare
cur refcursor;
query text;
rec daftar_urutan_pegawai_type%rowtype;
begin
	query := '
		select
			p.pegawai_id, p.nip_lama, p.nip_baru, p.vnama_lengkap nama
			, p.vttl ttl, p.jenis_kelamin, sp.nama status_pegawai
			, coalesce(pt.pangkat_id, 11) pangkat_id, pt.pangkat_kode gol_ruang, pt.pangkat_tmt tmt_pangkat
			, jt.jabatan, jt.tmt_jabatan, coalesce(jt.eselon_id, 99) eselon_id, jt.eselon, jt.tmt_eselon
			, (pt.pangkat_masa_kerja_tahun || '' - ''::text) || pt.pangkat_masa_kerja_bulan masa_kerja
			, ds.nama diklat_struktural, ds.tahun tahun_diklat
			, coalesce(ds1.jumlah_diklat, 0) as jumlah_diklat_struktural
			, coalesce(dns.jumlah_diklat, 0) as jumlah_diklat_nonstruktural
			, (pd.pendidikan::text || '' - ''::text) || pd.jurusan::text pendidikan
			, pd.nama_sekolah, pd.tahun tahun_lulus, ag.nama agama
			,
			(
			case
			when (to_number(to_char(now(), ''mm''::text), ''99''::text) - to_number(to_char(p.tanggal_lahir::timestamp with time zone, ''mm''::text), ''99''::text)) < 0::numeric then to_number(to_char(now(), ''yyyy''::text), ''9999''::text) - to_number(to_char(p.tanggal_lahir::timestamp with time zone, ''yyyy''::text), ''9999''::text) - 1::numeric
			else to_number(to_char(now(), ''yyyy''::text), ''9999''::text) - to_number(to_char(p.tanggal_lahir::timestamp with time zone, ''yyyy''::text), ''9999''::text)
			end || '' - ''::text) ||
			case
			when (to_number(to_char(now(), ''mm''::text), ''99''::text) - to_number(to_char(p.tanggal_lahir::timestamp with time zone, ''mm''::text), ''99''::text)) < 0::numeric then 12::numeric + to_number(to_char(now(), ''mm''::text), ''99''::text) - to_number(to_char(p.tanggal_lahir::timestamp with time zone, ''mm''::text), ''99''::text)
			else to_number(to_char(now(), ''mm''::text), ''99''::text) - to_number(to_char(p.tanggal_lahir::timestamp with time zone, ''mm''::text), ''99''::text)
			end usia
			, p.tipe_pegawai_id, p.satker_id
			, pt.pangkat_masa_kerja_tahun masa_kerja_tahun, pt.pangkat_masa_kerja_bulan masa_kerja_bulan
			, p.tempat_lahir, p.tanggal_lahir
		from pegawai p
		inner join status_pegawai sp on p.status_pegawai = sp.status_pegawai_id
		left join
		(
			select
				a.jabatan_riwayat_id, coalesce(a.eselon_id,99) eselon_id, b.nama eselon
				, a.tmt_jabatan, a.nama jabatan, a.tmt_eselon
			from jabatan_riwayat a
			left join eselon b on a.eselon_id = b.eselon_id
		) jt on p.jabatan_riwayat_id = jt.jabatan_riwayat_id
		left join
		(
			select
				a.pangkat_riwayat_id, a.pangkat_id, b.kode pangkat_kode, b.nama pangkat_nama, a.tmt_pangkat pangkat_tmt
				, a.masa_kerja_tahun pangkat_masa_kerja_tahun, a.masa_kerja_bulan pangkat_masa_kerja_bulan
			from pangkat_riwayat a
			left join pangkat b on a.pangkat_id = b.pangkat_id
		) pt on p.pangkat_riwayat_id = pt.pangkat_riwayat_id
		left join
		(
			select
				a.diklat_struktural_id, c.nama, a.tahun
			from diklat_struktural a
			left join diklat c on a.diklat_id = c.diklat_id
		) ds on p.diklat_struktural_id = ds.diklat_struktural_id
		left join
		(
			select
				x.pegawai_id, count(1) jumlah_diklat
			from diklat_struktural x
			group by x.pegawai_id
		) ds1 on p.pegawai_id = ds1.pegawai_id
		left join 
		(
			select dkt.pegawai_id, sum(dkt.jumlah) as jumlah_diklat
			from 
			(
				select a.pegawai_id, count(a.pegawai_id) as jumlah
				from diklat_fungsional a
				group by a.pegawai_id
				union all
				select a.pegawai_id, count(a.pegawai_id) as jumlah
				from diklat_teknis a
				group by a.pegawai_id
			) dkt
			group by dkt.pegawai_id
		) dns on p.pegawai_id = dns.pegawai_id
		left join
		(
			select 
			a.pendidikan_riwayat_id, a.pegawai_id, c.nama pendidikan, a.jurusan, a.nama nama_sekolah
			, to_char(a.tanggal_sttb, ''yyyy'') tahun
			from pendidikan_riwayat a
			left join pendidikan c on a.pendidikan_id = c.pendidikan_id
			where 1 = 1
		) pd on p.pendidikan_riwayat_id = pd.pendidikan_riwayat_id
		left join agama ag on p.agama_id = ag.agama_id
		where 1=1
		and p.status_pegawai in (1, 2)
  		order by coalesce(pt.pangkat_id, 11) desc, pt.pangkat_tmt
  		, coalesce(jt.eselon_id, 99), jt.tmt_eselon, pt.pangkat_masa_kerja_tahun desc, coalesce(dns.jumlah_diklat, 0::numeric) desc
	';

	open cur for execute query;
		fetch cur into rec;
			while found loop
			return next rec;
			fetch cur into rec;
		end loop;
	close cur;
end;
$$ language plpgsql strict;