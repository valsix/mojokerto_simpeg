
ALTER TABLE KINERJA ALTER COLUMN PEGAWAI_ID TYPE BIGINT;
ALTER TABLE KINERJA ALTER COLUMN KINERJA_ID SET NOT NULL;
ALTER TABLE penghargaan ADD PRIMARY KEY (penghargaan_id);

-- Function: ambil_jab_fung_nama(character varying)

-- DROP FUNCTION ambil_jab_fung_nama(character varying);

CREATE OR REPLACE FUNCTION ambil_jab_fung_nama(jabatanfungsionalid character varying)
  RETURNS character varying AS
$BODY$
DECLARE
tmpTahun VARCHAR(200);
jabfung VARCHAR(300);

BEGIN
      FOR i IN 0 .. (LENGTH(JABATANFUNGSIONALID) / 2) - 1 LOOP

        SELECT NAMA into jabfung  FROM JABATAN_FUNGSIONAL WHERE JABATAN_FUNGSIONAL_ID = SUBSTR(JABATANFUNGSIONALID, 1, LENGTH(JABATANFUNGSIONALID) - (i * 2));

            IF i = 0 THEN
                tmpTahun := jabfung;
            ELSE
                IF i = 2 THEN 
                tmpTahun := jabfung || '  ' || tmpTahun;
                ELSE
                tmpTahun :=tmpTahun; 
                END IF;
            END IF;


    END LOOP;

    RETURN tmpTahun;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION ambil_jab_fung_nama(character varying)
  OWNER TO postgres;


-- Function: satker_generate(character varying)

-- DROP FUNCTION satker_generate(character varying);

CREATE OR REPLACE FUNCTION satker_generate(satkerid character varying)
  RETURNS character varying AS
$BODY$
DECLARE 
  tmpSatker VARCHAR(50);

BEGIN

  IF(SATKERID = '0') THEN
  SELECT COALESCE(CASE WHEN LENGTH(SATKER_ID) = 1 THEN ('0' || SATKER_ID) ELSE (SATKER_ID) END, '01') INTO tmpSatker
  FROM (SELECT (MAX(SATKER_ID)::int + 1)::text SATKER_ID FROM SATKER WHERE SATKER_ID_PARENT = '0') A;
     RETURN(tmpSatker);    

  ELSE
  SELECT  COALESCE(CASE WHEN LENGTH(SATKER_ID) = 1 THEN ('0' || SATKER_ID) ELSE (SATKER_ID) END, '01') INTO tmpSatker FROM 
   (SELECT (MAX(SUBSTR(SATKER_ID, LENGTH(SATKERID) + 1, 2))::int + 1)::text SATKER_ID
    FROM SATKER
   WHERE LENGTH (SATKER_ID) = LENGTH(SATKERID) + 2 AND SATKER_ID LIKE SATKERID || '%') A;
     RETURN(SATKERID || tmpSatker);    
  END IF;

END;

$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION satker_generate(character varying)
  OWNER TO postgres;


